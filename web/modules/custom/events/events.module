<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;
use Drupal\Core\Datetime\DrupalDateTime;
/**
 * Implements hook_form_FORM_ID_alter().
 */
function events_form_node_main_events_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#validate'][] = 'events_main_events_date_validate';
}

/**
 * Custom validation handler to ensure end date is after start date.
 */
function events_main_events_date_validate(array &$form, FormStateInterface $form_state) {
  $start = $form_state->getValue('field_start_date')[0]['value'] ?? null;
  $end = $form_state->getValue('field_end_date')[0]['value'] ?? null;

  if (!empty($start) && !empty($end)) {
    $start_time = strtotime($start);
    $end_time = strtotime($end);

    if ($end_time <= $start_time) {
      $form_state->setErrorByName('field_end_date', t('End date must be after the start date.'));
    }
  }
}
/**
 * Implements hook_theme().
 */
function events_theme($existing, $type, $theme, $path) {
  return [
    'event_view' => [
      'variables' => [
        'event' => NULL,
        'images' => [],
        'date_formatter' => NULL,
      ],
      'template' => 'event-view',
      'path' => $path . '/templates',
    ],
  ];
}

/**
 * Implements hook_views_pre_build().
 */
function events_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
//used frontend instead of main_events as the list in frontpage
  if ($view->id() === 'frontpage') {

    // Get DB connection
    $connection = \Drupal::database();

    // Fetch config from DB
    $config = $connection->select('event_config', 'ec')
      ->fields('ec')
      ->range(0, 1)
      ->execute()
      ->fetchObject();

    if ($config) {
      $show_old = $config->show_old;
      $events_per_page = (int) ($config->events_per_page ?? 10);

      // Set pagination
      $view->setItemsPerPage($events_per_page);

      // Filter out old events based on field_event_date
      if (!$show_old) {
        $now = \Drupal::time()->getCurrentTime();

        $view->query->addWhere(0, 'field_end_date', $now, '>');
      }
    }
  }
}

